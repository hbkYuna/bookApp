# suppress inspection "SpringBootApplicationProperties" for whole file

# activate this file with env var spring.profiles.active=dev (default!)

spring.jpa.show-sql=true

spring.h2.console.enabled=true

#######################################
###### DB-creation -- OPTION 1: h2-mem
##
## disable flyway - it can be useful to enable this *temporarily* in dev env
## db is auto-generated (so no flyway) and initialized from data.sql:
spring.flyway.enabled=false
spring.datasource.initialization-mode=always
spring.jpa.hibernate.ddl-auto=create-drop

spring.datasource.url=jdbc:h2:mem:books
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

#######################################
###### DB-creation -- OPTION 2: h2-file with flyway
##
## if I want to test the flyway scripts with a simple persistent database -> h2 file (iso mem)
## data will be stored in the file ./books.mv.db
## --> throw away that file if you want to start from scratch
## activate flyway:
#spring.flyway.enabled=true
#spring.jpa.hibernate.ddl-auto=validate
#spring.datasource.initialization-mode=never
## db connection pars for h2-file:
#spring.datasource.url=jdbc:h2:file:./books
#spring.datasource.username=sa
#spring.datasource.password=
##has to be false to avoid circular dep flyway and entityManagerFactory
#spring.jpa.defer-datasource-initialization=false

#######################################
###### DB-creation -- OPTION 3: local postgresql db with flyway
## if I want to test if flyway update scripts have proper postgres syntax
##
## activate flyway:
#spring.flyway.enabled=true
#spring.jpa.hibernate.ddl-auto=validate
#spring.datasource.initialization-mode=never
## db connection pars for local postgres:
#spring.datasource.url=jdbc:postgresql://localhost:5432/booksdb
#spring.datasource.username=booksuser
#spring.datasource.password=test123
##has to be false to avoid circular dep flyway and entityManagerFactory
#spring.jpa.defer-datasource-initialization=false
